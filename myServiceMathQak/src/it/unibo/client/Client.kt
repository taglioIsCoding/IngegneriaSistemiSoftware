/* Generated by AN DISI Unibo */ 
package it.unibo.client

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Client ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outgreen("	Sono il $name")
						request("fibo_request", "fibo(46)" ,"server" )  
						CommUtils.outgreen("	$name: asked for fibo of 6")
						request("fibo_request", "fibo(2)" ,"server" )  
						CommUtils.outgreen("	$name: asked for fibo of 2")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="handle7",targetState="handle_reply",cond=whenReply("fibo_reply"))
				}	 
				state("handle_reply") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("fibo(X)"), Term.createTerm("fibo(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								CommUtils.outgreen("	$name: recived response ${payloadArg(0)}")
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="handle8",targetState="handle_reply",cond=whenReply("fibo_reply"))
				}	 
			}
		}
} 
