System ping_pong

Dispatch hit : hit(NUM_GAME) "Dispactch che rappresenta il colpo di racchetta"

Context ctxpingpong ip [host="localhost" port=8000] 

QActor ping context ctxpingpong{
	[# var X = 20 #]
	
	State s0 initial{
		println("Sono il $name") color magenta
		[#Thread.sleep(200)#]
		println("$name: sending ping ...") color magenta
		forward pong -m hit : hit($X)
	}
	Transition t0 whenMsg hit -> handleEnemyHit
	
	State handleEnemyHit {
		onMsg(hit : hit(NUM_GAME)){
			println("$name: recived pong ${payloadArg(0)}") color magenta
			if [#(0..10).random() % 4 != 0#]{
				println("$name: I hit the ball =)") color magenta
				[# X = X + 1 #]
				forward pong -m hit : hit($X)
			} else {
				println("$name: I miss the ball =(") color magenta
			}
		}
	}
	Transition t0 whenMsg hit -> handleEnemyHit
}

QActor pong context ctxpingpong{
	State s0 initial{
		println("	Sono il $name") color green
	}
	Transition t0 whenMsg hit -> handleEnemyHit
	
	State handleEnemyHit {
		onMsg(hit : hit(NUM_GAME)){
			println("	$name: recived ping ${payloadArg(0)}") color green
			if [#(0..10).random() % 4 != 0 #]{
				println("	$name: I hit the ball =)") color green
				[# var X = payloadArg(0).toInt() + 1 #]
				forward ping -m hit : hit($X)
			} else {
				println("	$name: I miss the ball =(") color green
			}
		}
	}
	Transition t0 whenMsg hit -> handleEnemyHit
}