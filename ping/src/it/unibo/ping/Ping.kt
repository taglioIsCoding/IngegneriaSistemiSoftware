/* Generated by AN DISI Unibo */ 
package it.unibo.ping

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Ping ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		 
				var N = 1
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outmagenta("Sono il $name")
						delay(500) 
						forward("ball", "ball($N)" ,"pong" ) 
						CommUtils.outmagenta("Invio battuta")
						updateResourceRep( "update($name, $N)"  
						)
						CommUtils.outmagenta("Invio update: update($name, $N)")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_s0", 
				 	 					  scope, context!!, "local_tout_"+name+"_s0", 1000.toLong() )  //OCT2023
					}	 	 
					 transition(edgeName="hit0",targetState="end_of_excange",cond=whenTimeout("local_tout_"+name+"_s0"))   
					transition(edgeName="hit1",targetState="handle_ball",cond=whenDispatch("ball"))
				}	 
				state("handle_ball") { //this:State
					action { //it:State
						if(  N < 5  
						 ){ N = N + 1 
						CommUtils.outmagenta("Invio $N")
						forward("ball", "ball($N)" ,"pong" ) 
						CommUtils.outmagenta("Invio update: update($name, $N)")
						updateResourceRep( "update($name, $N)"  
						)
						}
						else
						 {CommUtils.outmagenta("$name fine")
						  System.exit(0)  
						 }
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_handle_ball", 
				 	 					  scope, context!!, "local_tout_"+name+"_handle_ball", 1000.toLong() )  //OCT2023
					}	 	 
					 transition(edgeName="hit2",targetState="end_of_excange",cond=whenTimeout("local_tout_"+name+"_handle_ball"))   
					transition(edgeName="hit3",targetState="handle_ball",cond=whenDispatch("ball"))
				}	 
				state("end_of_excange") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name non ho ricevuto risposta")
						 System.exit(0)  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
} 
