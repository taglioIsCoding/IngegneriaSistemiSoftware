System helloworld3 
 
Dispatch out  : out(TERM) 

Context ctxhello ip [host="localhost" port=8003] 

QActor display context ctxhello { //withobj d using "utils.DisplayObj.create()"{
	[# val d = DisplayObj.create() #]
	   
	State s0 initial{		
	}
	Transition t0 whenMsg out -> handleout
	
	State handleout{
		// se il messaggio unifica (in stile prolog rispetta il pattern) viene gestito secondo 
		// questa logica 
		onMsg( out:out(TERM)){
			[# val OutMsg = payloadArg(0) #]
			[# d.write("$OutMsg") #]
			updateResource [# OutMsg #]
		}		
	} 
	Transition t0 whenMsg out -> handleout
}

QActor worker context ctxhello{
    State s0 initial{
       delay 1500
       println("Hello world") color magenta 		 
       forward display -m out:out(hello_again)
    }
} 
  
//DisplayHTML d   
